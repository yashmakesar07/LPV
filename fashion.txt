import numpy as np
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten, MaxPooling2D, Conv2D
import matplotlib.pyplot as plt

# Load and preprocess the data
(train_x, train_y), (test_x, test_y) = fashion_mnist.load_data()
train_x, test_x = train_x / 255.0, test_x / 255.0

# Define the model
model = Sequential()
model.add(Conv2D(filters=64, kernel_size=(3,3), activation='relu', input_shape=(28, 28, 1)))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(128, activation="relu"))
model.add(Dense(10, activation="softmax"))

# Compile the model
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(train_x.reshape(-1, 28, 28, 1), train_y, epochs=5, validation_split=0.2)

# Evaluate the model
loss, acc = model.evaluate(test_x.reshape(-1, 28, 28, 1), test_y)
print("Test Loss:", loss)
print("Test Accuracy:", acc)

# Define labels
labels = ['t_shirt', 'trouser', 'pullover', 'dress', 'coat', 'sandal', 'shirt', 'sneaker', 'bag', 'ankle_boots']

# Make predictions
predictions = model.predict(test_x[:1])

# Get predicted label
label = labels[np.argmax(predictions)]

# Plot the image
print("Predicted Label:", label)
plt.imshow(test_x[0], cmap='gray')
plt.show()
